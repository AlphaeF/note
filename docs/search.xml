<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>面试题:组小和</title>
      <link href="/2022/05/31/mian-shi-ti-zu-xiao-he/"/>
      <url>/2022/05/31/mian-shi-ti-zu-xiao-he/</url>
      
        <content type="html"><![CDATA[<h1 id="1-问题描述"><a href="#1-问题描述" class="headerlink" title="1.问题描述"></a>1.问题描述</h1><p>数组小和的定义如下：</p><p>例如，数组s=[ 1,3,5,2,4,6],在s[0]的左边小于或等于s[0]的数的和为0,在s[l]的左边 小于或等于s[l]的数的和为1, 在s[2]的左边小于或等于s[2]的数的和为1+3=4, 在s[3]的 左边小于或等于s[3]<br>的数的和为1, 在s[4]的左边小于或等于s[4]的数的和为1+3+2=6, 在 s[5]的左边小于或等于s[5]的数的和为1+3+5+2+4=15,所以s的小和为0+1+4+1+6+15=27。</p><p>给定一个数组s,实现函数返回s的小和。</p><h1 id="2-思路和解法"><a href="#2-思路和解法" class="headerlink" title="2.思路和解法"></a>2.思路和解法</h1><p>通常采用暴力破解，时间复杂度是n方，此法过程简单忽略。</p><p>可以利用归并排序，一边排序一边计算小和，排序后的两组元素再进行归并的时候计算小和的时间复杂度是n+m，小于n*m 。</p><p><img src="/img.png" alt="图一">图一</p><p>具体过程：</p><ol><li>先分组拆成一个一个的元素：见</li><li>再归并，并且归并的同时计算这两个元素产生的小和，计算完小和之后两个元素就可以进行排序而不影响结果。</li><li>当任意一组多于两个元素时，假设A组n个元素，B组m个元素，维护两个指针i，j。（此两组的组内元素必定是有序的，不理解见：步骤2）<ul><li>当A[i]&lt;=B[j]时，移动A组指针i，同时求出产生的小和为A[i]*(m-j+1) 因为B[j]后面的元素都更大，不用算了(最关键的一步节省了算力)。</li><li>当A[i]&gt;B[j]时，移动B组指针j，不产生小和 由于两组内的元素都是排好序的，所以可以使用两个指针</li><li>照例用上面的方式算好小和后进行归并排序。即：维护一个临时数组，1.哪边组元素小<br>将那一边元素放入零时数组，2.然后将没放完的那组剩下元素都放入零时数组。3.最后将临时数组中有序的元素的回赋给这个区间，（这样下一步中，用到的每组组内都是有序的）</li></ul></li></ol><p>上述见图：<br><img src="/img_1.png" alt="图二"><br>图二</p><p>把每一步合并产生的小和加起来即组小和。</p><h1 id="3-代码："><a href="#3-代码：" class="headerlink" title="3.代码："></a>3.代码：</h1><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">GroupSmallSum</span> {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">smallSum</span><span class="params">(<span class="type">int</span>[] a, <span class="type">int</span> start, <span class="type">int</span> end)</span> {</span><br><span class="line">        <span class="keyword">if</span> (start &lt; <span class="number">0</span> || start &gt;= end) {</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> (start + end) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">return</span> smallSum(a, start, mid) + smallSum3(a, mid + <span class="number">1</span>, end) + merge(a, start, end, mid);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 一边归并一边排序</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">merge</span><span class="params">(<span class="type">int</span>[] a, <span class="type">int</span> start, <span class="type">int</span> end, <span class="type">int</span> mid)</span> {</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span>[] tempA = <span class="keyword">new</span> <span class="title class_">int</span>[end - start + <span class="number">1</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">tempIndex</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> start, j = mid + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (i &lt;= mid &amp;&amp; j &lt;= end) {</span><br><span class="line">            <span class="keyword">if</span> (a[i] &lt;= a[j]) {</span><br><span class="line">                sum += a[i] * (end - j + <span class="number">1</span>);</span><br><span class="line">                tempA[tempIndex++] = a[i++];</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                tempA[tempIndex++] = a[j++];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">while</span> (i &lt;= mid) {</span><br><span class="line">            tempA[tempIndex++] = a[i++];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">while</span> (j &lt;= end) {</span><br><span class="line">            tempA[tempIndex++] = a[j++];</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//复制tempA 给 原数据</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>; k &lt; tempA.length; k++) {</span><br><span class="line">            a[start + k] = tempA[k];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="4-后话性能测试："><a href="#4-后话性能测试：" class="headerlink" title="4.后话性能测试："></a>4.后话性能测试：</h1><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[]args)</span>{</span><br><span class="line"></span><br><span class="line">        Random random=<span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span>[]a=Stream.generate(()-&gt;random.nextInt(<span class="number">1000</span>)).limit(<span class="number">100000</span>).mapToInt(i-&gt;i).toArray();</span><br><span class="line"></span><br><span class="line">        StopWatch stopWatch=<span class="keyword">new</span> <span class="title class_">StopWatch</span>();</span><br><span class="line">        <span class="comment">// 暴力破解</span></span><br><span class="line">        stopWatch.start(<span class="string">"1"</span>);</span><br><span class="line">        smallSum(a);</span><br><span class="line">        stopWatch.stop();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 归并排序</span></span><br><span class="line">        stopWatch.start(<span class="string">"3"</span>);</span><br><span class="line">        System.out.println(<span class="string">"smallSum3"</span>);</span><br><span class="line">        smallSum3(a);</span><br><span class="line">        stopWatch.stop();</span><br><span class="line">        System.out.println(stopWatch.prettyPrint());</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>输出结果</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">// 一百个元素时</span><br><span class="line">820456</span><br><span class="line">smallSum3</span><br><span class="line">820456</span><br><span class="line">StopWatch '': running time = 574456 ns</span><br><span class="line">---------------------------------------------</span><br><span class="line">ns         %     Task name</span><br><span class="line">---------------------------------------------</span><br><span class="line">000435353  076%  1</span><br><span class="line">000139103  024%  3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 100000个元素时：</span><br><span class="line"></span><br><span class="line"> -95754247</span><br><span class="line"> smallSum3</span><br><span class="line"> -95754247</span><br><span class="line"> </span><br><span class="line"> StopWatch '': running time = 2555184706 ns</span><br><span class="line">   ---------------------------------------</span><br><span class="line">   ns         %     Task name</span><br><span class="line">   ---------------------------------------</span><br><span class="line"> 2537280158  099%  1</span><br><span class="line"> 017904548  001%  3</span><br><span class="line"> </span><br></pre></td></tr></tbody></table></figure><p>还有一个优化点 可以提前new出一个完整的temp数组，避免来回new。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>test_site</title>
      <link href="/2022/05/18/test-site/"/>
      <url>/2022/05/18/test-site/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/03/04/hello-world/"/>
      <url>/2022/03/04/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
